{"ast":null,"code":"var _jsxFileName = \"/Users/sakikohanada/Desktop/jsLesson/diary-app/diary-app-frontend/src/components/DiaryList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport diaryService from \"../services/diaryService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiaryList = () => {\n  _s();\n  //日記のデータを設定\n  const [diaries, setDiaries] = useState([]);\n  const getDiaries = () => {\n    return Axios.get(\"http://localhost:3001/api/get/diaries\");\n  };\n  const diaryService = {\n    getDiaries\n  };\n\n  //日記のデータが更新された際も常に取得する\n  const refreshDiaries = () => {\n    diaryService.getDiaries().then(response => {\n      setDiaries(response.data);\n      console.log(response.data);\n    });\n  };\n\n  //refreshDiariesが実行されたら空の配列を監視\n  //空の配列はuseStateの初期値として設定\n  useEffect(() => {\n    refreshDiaries();\n  }, []);\n\n  //取得した日記のデータを順に取り出して表示\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diaryList\",\n    children: diaries.map((val, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: val.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: val.date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshDiaries,\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryList, \"pIGmDj0SP28ApKftXVGNfdeOpYg=\");\n_c = DiaryList;\nexport default DiaryList;\nvar _c;\n$RefreshReg$(_c, \"DiaryList\");","map":{"version":3,"names":["useState","useEffect","diaryService","jsxDEV","_jsxDEV","Fragment","_Fragment","DiaryList","_s","diaries","setDiaries","getDiaries","Axios","get","refreshDiaries","then","response","data","console","log","className","children","map","val","index","title","fileName","_jsxFileName","lineNumber","columnNumber","date","onClick","_c","$RefreshReg$"],"sources":["/Users/sakikohanada/Desktop/jsLesson/diary-app/diary-app-frontend/src/components/DiaryList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport diaryService from \"../services/diaryService\";\n\nconst DiaryList = () => {\n  //日記のデータを設定\n  const [diaries, setDiaries] = useState([]);\n\n\n  const getDiaries = () => {\n    return Axios.get(\"http://localhost:3001/api/get/diaries\")\n  }\n  \n  const diaryService = {\n    getDiaries\n  };\n  \n\n  //日記のデータが更新された際も常に取得する\n  const refreshDiaries = () => {\n    diaryService.getDiaries().then(response => {\n      setDiaries(response.data);\n      console.log(response.data);\n\n    });\n  };\n\n  //refreshDiariesが実行されたら空の配列を監視\n  //空の配列はuseStateの初期値として設定\n  useEffect(() => {\n    refreshDiaries();\n  }, []);\n\n//取得した日記のデータを順に取り出して表示\n  return (\n    <div className=\"diaryList\">\n      {diaries.map((val, index) => (\n        <>\n          <li key={index}>{val.title}</li>\n          <li key={index}>{val.date}</li>\n          <button onClick={refreshDiaries}>削除</button>\n        </>\n      ))}\n    </div>\n  )\n}\n\nexport default DiaryList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOC,KAAK,CAACC,GAAG,CAAC,uCAAuC,CAAC;EAC3D,CAAC;EAED,MAAMX,YAAY,GAAG;IACnBS;EACF,CAAC;;EAGD;EACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BZ,YAAY,CAACS,UAAU,CAAC,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAI;MACzCN,UAAU,CAACM,QAAQ,CAACC,IAAI,CAAC;MACzBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAE5B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACAhB,SAAS,CAAC,MAAM;IACda,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAER;EACE,oBACEV,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBZ,OAAO,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBpB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAiBE,GAAG,CAACE;MAAK,GAAjBD,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,eAChCzB,OAAA;QAAAiB,QAAA,EAAiBE,GAAG,CAACO;MAAI,GAAhBN,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,eAC/BzB,OAAA;QAAQ2B,OAAO,EAAEjB,cAAe;QAAAO,QAAA,EAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC5C,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAArB,EAAA,CAzCKD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}