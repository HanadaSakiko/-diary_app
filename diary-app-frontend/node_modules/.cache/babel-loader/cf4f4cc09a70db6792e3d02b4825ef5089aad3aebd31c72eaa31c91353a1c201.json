{"ast":null,"code":"var _jsxFileName = \"/Users/sakikohanada/Desktop/jsLesson/diary-app/diary-app-frontend/src/components/DiaryList.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport diaryService from \"./services/diaryService\";\n\n//TODO:サンプルデータの配列 データベースから取得するため後ほど削除\n// const diaries = [\n//   {\n//     id: 1,\n//     date: '2024-10-18',\n//     title: '日記1',\n//     content: '内容1'\n//   },\n//   {\n//     id: 2,\n//     date: '2024-10-19',\n//     title: '日記2',\n//     content: '内容2'\n//   }\n// ]\n\n// const Diaries = () => {\n\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiaryList = () => {\n  _s();\n  //日記のデータを設定\n  const [diaries, setDiaries] = useState([]);\n\n  //日記のデータが更新された際も常に取得する\n  const refreshDiaries = () => {\n    diaryService.getDiaries().then(response => {\n      setDiaries(response.data);\n    });\n    useEffe;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diaryList\",\n    children: diaries.map((val, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: val.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: val.date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryList, \"ze5JybeeHEPOp1vJ0cp+RX0IwII=\");\n_c = DiaryList;\nexport default DiaryList;\nvar _c;\n$RefreshReg$(_c, \"DiaryList\");","map":{"version":3,"names":["useState","useEffect","diaryService","jsxDEV","_jsxDEV","Fragment","_Fragment","DiaryList","_s","diaries","setDiaries","refreshDiaries","getDiaries","then","response","data","useEffe","className","children","map","val","index","title","fileName","_jsxFileName","lineNumber","columnNumber","date","_c","$RefreshReg$"],"sources":["/Users/sakikohanada/Desktop/jsLesson/diary-app/diary-app-frontend/src/components/DiaryList.js"],"sourcesContent":["// import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport diaryService from \"./services/diaryService\";\n\n//TODO:サンプルデータの配列 データベースから取得するため後ほど削除\n// const diaries = [\n//   {\n//     id: 1,\n//     date: '2024-10-18',\n//     title: '日記1',\n//     content: '内容1'\n//   },\n//   {\n//     id: 2,\n//     date: '2024-10-19',\n//     title: '日記2',\n//     content: '内容2'\n//   }\n// ]\n\n// const Diaries = () => {\n  \n// }\n\n\nconst DiaryList = () => {\n  //日記のデータを設定\n  const [diaries, setDiaries] = useState([]);\n\n  //日記のデータが更新された際も常に取得する\n  const refreshDiaries = ()=>{\n    diaryService.getDiaries().then(response => {\n      setDiaries(response.data)\n    })\n  \n    useEffe\n  \n\n    \n  }\n\n  return (\n    <div className=\"diaryList\">\n      {diaries.map((val, index) => (\n        <>\n          <li key={index}>{val.title}</li>\n          <li key={index}>{val.date}</li>\n          <button>削除</button>\n        </>\n      ))}\n    </div>\n  )\n}\n\nexport default DiaryList;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,yBAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMW,cAAc,GAAGA,CAAA,KAAI;IACzBT,YAAY,CAACU,UAAU,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACzCJ,UAAU,CAACI,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC;IAEFC,OAAO;EAIT,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBT,OAAO,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBjB,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAiBE,GAAG,CAACE;MAAK,GAAjBD,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,eAChCtB,OAAA;QAAAc,QAAA,EAAiBE,GAAG,CAACO;MAAI,GAAhBN,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,eAC/BtB,OAAA;QAAAc,QAAA,EAAQ;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACnB,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA3BKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}