{"ast":null,"code":"var _jsxFileName = \"/Users/sakikohanada/Desktop/jsLesson/diary-app/diary-app-frontend/src/components/DiaryList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// import diaryService from \"../services/diaryService\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getDiaries = () => {\n  return Axios.get(\"http://localhost:3001/api/get/diaries\");\n};\nconst DiaryList = () => {\n  _s();\n  //日記のデータを設定\n  const [diaries, setDiaries] = useState([]);\n\n  //日記のデータが更新された際も常に取得する\n  const refreshDiaries = () => {\n    getDiaries().then(response => {\n      setDiaries(response.data);\n    });\n  };\n\n  //refreshDiariesが実行されたら空の配列を監視\n  //空の配列はuseStateの初期値として設定\n  useEffect(() => {\n    refreshDiaries();\n  }, []);\n  const diariesList = diaries.map((val, index) => {\n    /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: val.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: val.date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshDiaries,\n        children: \"\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  });\n\n  //取得した日記のデータを順に取り出して表示\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diaryList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryList, \"pIGmDj0SP28ApKftXVGNfdeOpYg=\");\n_c = DiaryList;\nexport default DiaryList;\nvar _c;\n$RefreshReg$(_c, \"DiaryList\");","map":{"version":3,"names":["useState","useEffect","Axios","jsxDEV","_jsxDEV","Fragment","_Fragment","getDiaries","get","DiaryList","_s","diaries","setDiaries","refreshDiaries","then","response","data","diariesList","map","val","index","children","title","fileName","_jsxFileName","lineNumber","columnNumber","date","onClick","className","_c","$RefreshReg$"],"sources":["/Users/sakikohanada/Desktop/jsLesson/diary-app/diary-app-frontend/src/components/DiaryList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n// import diaryService from \"../services/diaryService\";\nimport Axios from 'axios';\n\nconst getDiaries = () => {\n  return Axios.get(\"http://localhost:3001/api/get/diaries\")\n}\n\n\nconst DiaryList = () => {\n  //日記のデータを設定\n  const [diaries, setDiaries] = useState([]);\n\n  //日記のデータが更新された際も常に取得する\n  const refreshDiaries = () => {\n    getDiaries().then(response => {\n      setDiaries(response.data);\n\n    });\n  };\n\n  //refreshDiariesが実行されたら空の配列を監視\n  //空の配列はuseStateの初期値として設定\n  useEffect(() => {\n    refreshDiaries();\n  }, []);\n\n  const diariesList= diaries.map((val, index) => {\n    <>\n      <li key={index}>{val.title}</li>\n      <li key={index}>{val.date}</li>\n      <button onClick={refreshDiaries}>削除</button>\n    </>\n  });\n\n//取得した日記のデータを順に取り出して表示\n  return (\n    <div className=\"diaryList\">\n      \n    </  div>\n  )\n}\n\nexport default DiaryList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,OAAOL,KAAK,CAACM,GAAG,CAAC,uCAAuC,CAAC;AAC3D,CAAC;AAGD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3BN,UAAU,CAAC,CAAC,CAACO,IAAI,CAACC,QAAQ,IAAI;MAC5BH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC;IAE3B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACAf,SAAS,CAAC,MAAM;IACdY,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAEN,OAAO,CAACO,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC7C,aAAAhB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAiBF,GAAG,CAACG;MAAK,GAAjBF,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,eAChCtB,OAAA;QAAAiB,QAAA,EAAiBF,GAAG,CAACQ;MAAI,GAAhBP,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,eAC/BtB,OAAA;QAAQwB,OAAO,EAAEf,cAAe;QAAAQ,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC5C,CAAC;EACL,CAAC,CAAC;;EAEJ;EACE,oBACEtB,OAAA;IAAKyB,SAAS,EAAC;EAAW;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnB,CAAC;AAEZ,CAAC;AAAAhB,EAAA,CAhCKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}